
ElevatorDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000372  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000372  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000372  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a43  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005ba  00000000  00000000  00000e6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000650  00000000  00000000  00001425  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000084  00000000  00000000  00001a78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000403  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000070  00000000  00000000  00001eff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001f6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a2 36       	cpi	r26, 0x62	; 98
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	62 d0       	rcall	.+196    	; 0x108 <main>
  44:	5a c1       	rjmp	.+692    	; 0x2fa <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <_Z13UpdateOutputsv>:
		delayms(100);
		GlobalOutputs.lightDn=1;
		GlobalOutputs.rDn=1;
		GlobalOutputs.rAllow=1;
		UpdateOutputs();
		while (GlobalInputs.PosDn) 
  48:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
  4c:	82 bb       	out	0x12, r24	; 18
  4e:	08 95       	ret

00000050 <_Z12UpdateInputsv>:
  50:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
  54:	98 9b       	sbis	0x13, 0	; 19
  56:	05 c0       	rjmp	.+10     	; 0x62 <_Z12UpdateInputsv+0x12>
  58:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  5c:	81 60       	ori	r24, 0x01	; 1
  5e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  62:	99 9b       	sbis	0x13, 1	; 19
  64:	05 c0       	rjmp	.+10     	; 0x70 <_Z12UpdateInputsv+0x20>
  66:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  6a:	82 60       	ori	r24, 0x02	; 2
  6c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  70:	9a 9b       	sbis	0x13, 2	; 19
  72:	05 c0       	rjmp	.+10     	; 0x7e <_Z12UpdateInputsv+0x2e>
  74:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  78:	84 60       	ori	r24, 0x04	; 4
  7a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  7e:	9b 9b       	sbis	0x13, 3	; 19
  80:	05 c0       	rjmp	.+10     	; 0x8c <_Z12UpdateInputsv+0x3c>
  82:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  86:	88 60       	ori	r24, 0x08	; 8
  88:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  8c:	9c 9b       	sbis	0x13, 4	; 19
  8e:	05 c0       	rjmp	.+10     	; 0x9a <_Z12UpdateInputsv+0x4a>
  90:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  94:	80 61       	ori	r24, 0x10	; 16
  96:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  9a:	9d 9b       	sbis	0x13, 5	; 19
  9c:	05 c0       	rjmp	.+10     	; 0xa8 <_Z12UpdateInputsv+0x58>
  9e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  a2:	80 62       	ori	r24, 0x20	; 32
  a4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  a8:	b2 9b       	sbis	0x16, 2	; 22
  aa:	05 c0       	rjmp	.+10     	; 0xb6 <_Z12UpdateInputsv+0x66>
  ac:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  b0:	80 64       	ori	r24, 0x40	; 64
  b2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  b6:	b1 9b       	sbis	0x16, 1	; 22
  b8:	05 c0       	rjmp	.+10     	; 0xc4 <_Z12UpdateInputsv+0x74>
  ba:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  be:	80 68       	ori	r24, 0x80	; 128
  c0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  c4:	08 95       	ret

000000c6 <_Z7delaymsj>:
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	00 d0       	rcall	.+0      	; 0xcc <_Z7delaymsj+0x6>
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	00 97       	sbiw	r24, 0x00	; 0
  d2:	a9 f0       	breq	.+42     	; 0xfe <_Z7delaymsj+0x38>
  d4:	1a 82       	std	Y+2, r1	; 0x02
  d6:	19 82       	std	Y+1, r1	; 0x01
  d8:	29 81       	ldd	r18, Y+1	; 0x01
  da:	3a 81       	ldd	r19, Y+2	; 0x02
  dc:	2a 3f       	cpi	r18, 0xFA	; 250
  de:	31 05       	cpc	r19, r1
  e0:	64 f4       	brge	.+24     	; 0xfa <_Z7delaymsj+0x34>
  e2:	00 00       	nop
  e4:	29 81       	ldd	r18, Y+1	; 0x01
  e6:	3a 81       	ldd	r19, Y+2	; 0x02
  e8:	2f 5f       	subi	r18, 0xFF	; 255
  ea:	3f 4f       	sbci	r19, 0xFF	; 255
  ec:	3a 83       	std	Y+2, r19	; 0x02
  ee:	29 83       	std	Y+1, r18	; 0x01
  f0:	29 81       	ldd	r18, Y+1	; 0x01
  f2:	3a 81       	ldd	r19, Y+2	; 0x02
  f4:	2a 3f       	cpi	r18, 0xFA	; 250
  f6:	31 05       	cpc	r19, r1
  f8:	a4 f3       	brlt	.-24     	; 0xe2 <_Z7delaymsj+0x1c>
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	59 f7       	brne	.-42     	; 0xd4 <_Z7delaymsj+0xe>
  fe:	0f 90       	pop	r0
 100:	0f 90       	pop	r0
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <main>:
}

int main(void)
{
    /* Replace with your application code */
	DDRD=0xFF;
 108:	8f ef       	ldi	r24, 0xFF	; 255
 10a:	81 bb       	out	0x11, r24	; 17
	DDRB=0x00;
 10c:	17 ba       	out	0x17, r1	; 23
	DDRC=0x00;
 10e:	14 ba       	out	0x14, r1	; 20
	PORTD=0x00;
 110:	12 ba       	out	0x12, r1	; 18
	PORTB=0x00;
 112:	18 ba       	out	0x18, r1	; 24
	PORTC=0x00;
 114:	15 ba       	out	0x15, r1	; 21
	
	GlobalOutputs.byte = 0;
 116:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <GlobalOutputs>
	
	
    while (1) 
    {
		UpdateInputs();
 11a:	9a df       	rcall	.-204    	; 0x50 <_Z12UpdateInputsv>
			delayms(500);
		}
	
*/	
		
		if ((GlobalInputs.UpBtn)&&(GlobalInputs.PosUp))  // w góre - winda na górze.
 11c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 120:	81 ff       	sbrs	r24, 1
 122:	04 c0       	rjmp	.+8      	; 0x12c <main+0x24>
 124:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 128:	84 fd       	sbrc	r24, 4
 12a:	7a c0       	rjmp	.+244    	; 0x220 <main+0x118>
			UpdateOutputs();
			delayms(100);
			
		}
		
		if ((GlobalInputs.DnBtn)&&(GlobalInputs.PosDn)) // w dó³ - winda na dole
 12c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 130:	82 ff       	sbrs	r24, 2
 132:	04 c0       	rjmp	.+8      	; 0x13c <main+0x34>
 134:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 138:	85 fd       	sbrc	r24, 5
 13a:	82 c0       	rjmp	.+260    	; 0x240 <main+0x138>
			UpdateOutputs();
			delayms(100);
			
		}
		
		if ((GlobalInputs.UpBtn)&&(!GlobalInputs.pOBW)) // w góre - nie ma zezw.
 13c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 140:	81 ff       	sbrs	r24, 1
 142:	04 c0       	rjmp	.+8      	; 0x14c <main+0x44>
 144:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 148:	80 ff       	sbrs	r24, 0
 14a:	8a c0       	rjmp	.+276    	; 0x260 <main+0x158>
			GlobalOutputs.byte=0;
			UpdateOutputs();
			delayms(100);
		}
		
		if ((GlobalInputs.DnBtn)&&(!GlobalInputs.pOBW)) // w dó³ - nie ma zezw.
 14c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 150:	82 ff       	sbrs	r24, 2
 152:	04 c0       	rjmp	.+8      	; 0x15c <main+0x54>
 154:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 158:	80 ff       	sbrs	r24, 0
 15a:	97 c0       	rjmp	.+302    	; 0x28a <main+0x182>
			delayms(100);
		}
		
		uint8_t counter,test;
		
		if ((GlobalInputs.pOBW)&&(GlobalInputs.UpBtn)&&(GlobalInputs.PosDn))
 15c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 160:	80 ff       	sbrs	r24, 0
 162:	a8 c0       	rjmp	.+336    	; 0x2b4 <main+0x1ac>
 164:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 168:	81 ff       	sbrs	r24, 1
 16a:	a4 c0       	rjmp	.+328    	; 0x2b4 <main+0x1ac>
 16c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 170:	85 ff       	sbrs	r24, 5
 172:	a0 c0       	rjmp	.+320    	; 0x2b4 <main+0x1ac>
		{
			test=1;
			counter=200;
			while (counter) {
				UpdateInputs();
 174:	6d df       	rcall	.-294    	; 0x50 <_Z12UpdateInputsv>
				if (!GlobalInputs.UpBtn) test=0;
 176:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 17a:	fc cf       	rjmp	.-8      	; 0x174 <main+0x6c>
			}
			if (test) GoUp();
			
		}
		
		if ((GlobalInputs.pOBW)&&(GlobalInputs.DnBtn)&&(GlobalInputs.PosUp))
 17c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 180:	82 ff       	sbrs	r24, 2
 182:	9c c0       	rjmp	.+312    	; 0x2bc <main+0x1b4>
 184:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 188:	84 ff       	sbrs	r24, 4
 18a:	98 c0       	rjmp	.+304    	; 0x2bc <main+0x1b4>
		{
			test=1;
			counter=200;
			while (counter) {
				UpdateInputs();
 18c:	61 df       	rcall	.-318    	; 0x50 <_Z12UpdateInputsv>
				if (!GlobalInputs.UpBtn) test=0;
 18e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 192:	fc cf       	rjmp	.-8      	; 0x18c <main+0x84>
			}
			if (test) GoDn();
			
		}
		
		if ((GlobalInputs.pOBW)&&(GlobalInputs.UpBtn)&&(GlobalInputs.DnBtn)&&(GlobalInputs.AlBtn)) {
 194:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 198:	81 ff       	sbrs	r24, 1
 19a:	bf cf       	rjmp	.-130    	; 0x11a <main+0x12>
 19c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 1a0:	82 ff       	sbrs	r24, 2
 1a2:	bb cf       	rjmp	.-138    	; 0x11a <main+0x12>
 1a4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 1a8:	83 ff       	sbrs	r24, 3
 1aa:	b7 cf       	rjmp	.-146    	; 0x11a <main+0x12>
 1ac:	8c c0       	rjmp	.+280    	; 0x2c6 <main+0x1be>
		GlobalOutputs.rUp=1;
		GlobalOutputs.rAllow=1;
		UpdateOutputs();
		while (GlobalInputs.PosUp)
		{
			UpdateInputs();
 1ae:	50 df       	rcall	.-352    	; 0x50 <_Z12UpdateInputsv>
			if (!GlobalInputs.pOBW)
 1b0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 1b4:	80 fd       	sbrc	r24, 0
 1b6:	11 c0       	rjmp	.+34     	; 0x1da <main+0xd2>
			{
				GlobalOutputs.lightAlert=1;
 1b8:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 1bc:	80 64       	ori	r24, 0x40	; 64
 1be:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
				GlobalOutputs.buzzAlert=1;
 1c2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
				GlobalOutputs.rAllow=0;
 1cc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 1d0:	87 7f       	andi	r24, 0xF7	; 247
 1d2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
				UpdateOutputs();
 1d6:	38 df       	rcall	.-400    	; 0x48 <_Z13UpdateOutputsv>
 1d8:	05 c0       	rjmp	.+10     	; 0x1e4 <main+0xdc>
			} else GlobalOutputs.rAllow=1;
 1da:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 1de:	88 60       	ori	r24, 0x08	; 8
 1e0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		delayms(100);
		GlobalOutputs.lightUp=1;
		GlobalOutputs.rUp=1;
		GlobalOutputs.rAllow=1;
		UpdateOutputs();
		while (GlobalInputs.PosUp)
 1e4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 1e8:	84 fd       	sbrc	r24, 4
 1ea:	e1 cf       	rjmp	.-62     	; 0x1ae <main+0xa6>
				GlobalOutputs.buzzAlert=1;
				GlobalOutputs.rAllow=0;
				UpdateOutputs();
			} else GlobalOutputs.rAllow=1;
		}
		GlobalOutputs.rAllow=0;
 1ec:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 1f0:	87 7f       	andi	r24, 0xF7	; 247
 1f2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		GlobalOutputs.rUp=0;
 1f6:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 1fa:	8d 7f       	andi	r24, 0xFD	; 253
 1fc:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		GlobalOutputs.buzzAlert=1;
 200:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 204:	80 68       	ori	r24, 0x80	; 128
 206:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		UpdateOutputs();
 20a:	1e df       	rcall	.-452    	; 0x48 <_Z13UpdateOutputsv>
		delayms(500);
 20c:	84 ef       	ldi	r24, 0xF4	; 244
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	5a df       	rcall	.-332    	; 0xc6 <_Z7delaymsj>
		GlobalOutputs.byte=0;
 212:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <GlobalOutputs>
		UpdateOutputs();
 216:	18 df       	rcall	.-464    	; 0x48 <_Z13UpdateOutputsv>
		delayms(100);
 218:	84 e6       	ldi	r24, 0x64	; 100
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	54 df       	rcall	.-344    	; 0xc6 <_Z7delaymsj>
 21e:	7d cf       	rjmp	.-262    	; 0x11a <main+0x12>
	
*/	
		
		if ((GlobalInputs.UpBtn)&&(GlobalInputs.PosUp))  // w góre - winda na górze.
		{ 
			GlobalOutputs.buzzAlert=1;
 220:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 224:	80 68       	ori	r24, 0x80	; 128
 226:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 22a:	0e df       	rcall	.-484    	; 0x48 <_Z13UpdateOutputsv>
			delayms(10);
 22c:	8a e0       	ldi	r24, 0x0A	; 10
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	4a df       	rcall	.-364    	; 0xc6 <_Z7delaymsj>
			GlobalOutputs.byte=0;
 232:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 236:	08 df       	rcall	.-496    	; 0x48 <_Z13UpdateOutputsv>
			delayms(100);
 238:	84 e6       	ldi	r24, 0x64	; 100
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	44 df       	rcall	.-376    	; 0xc6 <_Z7delaymsj>
 23e:	76 cf       	rjmp	.-276    	; 0x12c <main+0x24>
			
		}
		
		if ((GlobalInputs.DnBtn)&&(GlobalInputs.PosDn)) // w dó³ - winda na dole
		{  
			GlobalOutputs.buzzAlert=1;
 240:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 244:	80 68       	ori	r24, 0x80	; 128
 246:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 24a:	fe de       	rcall	.-516    	; 0x48 <_Z13UpdateOutputsv>
			delayms(10);
 24c:	8a e0       	ldi	r24, 0x0A	; 10
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	3a df       	rcall	.-396    	; 0xc6 <_Z7delaymsj>
			GlobalOutputs.byte=0;
 252:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 256:	f8 de       	rcall	.-528    	; 0x48 <_Z13UpdateOutputsv>
			delayms(100);
 258:	84 e6       	ldi	r24, 0x64	; 100
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	34 df       	rcall	.-408    	; 0xc6 <_Z7delaymsj>
 25e:	6e cf       	rjmp	.-292    	; 0x13c <main+0x34>
			
		}
		
		if ((GlobalInputs.UpBtn)&&(!GlobalInputs.pOBW)) // w góre - nie ma zezw.
		{
			GlobalOutputs.lightAlert=1;
 260:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 264:	80 64       	ori	r24, 0x40	; 64
 266:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
			GlobalOutputs.lightDn=1;
 26a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 26e:	80 62       	ori	r24, 0x20	; 32
 270:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 274:	e9 de       	rcall	.-558    	; 0x48 <_Z13UpdateOutputsv>
			delayms(200);
 276:	88 ec       	ldi	r24, 0xC8	; 200
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	25 df       	rcall	.-438    	; 0xc6 <_Z7delaymsj>
			GlobalOutputs.byte=0;
 27c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 280:	e3 de       	rcall	.-570    	; 0x48 <_Z13UpdateOutputsv>
			delayms(100);
 282:	84 e6       	ldi	r24, 0x64	; 100
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	1f df       	rcall	.-450    	; 0xc6 <_Z7delaymsj>
 288:	61 cf       	rjmp	.-318    	; 0x14c <main+0x44>
		}
		
		if ((GlobalInputs.DnBtn)&&(!GlobalInputs.pOBW)) // w dó³ - nie ma zezw.
		{
			GlobalOutputs.lightAlert=1;
 28a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 28e:	80 64       	ori	r24, 0x40	; 64
 290:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
			GlobalOutputs.lightUp=1;
 294:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 298:	80 61       	ori	r24, 0x10	; 16
 29a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 29e:	d4 de       	rcall	.-600    	; 0x48 <_Z13UpdateOutputsv>
			delayms(200);
 2a0:	88 ec       	ldi	r24, 0xC8	; 200
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	10 df       	rcall	.-480    	; 0xc6 <_Z7delaymsj>
			GlobalOutputs.byte=0;
 2a6:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <GlobalOutputs>
			UpdateOutputs();
 2aa:	ce de       	rcall	.-612    	; 0x48 <_Z13UpdateOutputsv>
			delayms(100);
 2ac:	84 e6       	ldi	r24, 0x64	; 100
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0a df       	rcall	.-492    	; 0xc6 <_Z7delaymsj>
 2b2:	54 cf       	rjmp	.-344    	; 0x15c <main+0x54>
			}
			if (test) GoUp();
			
		}
		
		if ((GlobalInputs.pOBW)&&(GlobalInputs.DnBtn)&&(GlobalInputs.PosUp))
 2b4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 2b8:	80 fd       	sbrc	r24, 0
 2ba:	60 cf       	rjmp	.-320    	; 0x17c <main+0x74>
			}
			if (test) GoDn();
			
		}
		
		if ((GlobalInputs.pOBW)&&(GlobalInputs.UpBtn)&&(GlobalInputs.DnBtn)&&(GlobalInputs.AlBtn)) {
 2bc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 2c0:	80 fd       	sbrc	r24, 0
 2c2:	68 cf       	rjmp	.-304    	; 0x194 <main+0x8c>
 2c4:	2a cf       	rjmp	.-428    	; 0x11a <main+0x12>
		GlobalOutputs.rLocks=1;
 2c6:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 2ca:	81 60       	ori	r24, 0x01	; 1
 2cc:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		UpdateOutputs();
 2d0:	bb de       	rcall	.-650    	; 0x48 <_Z13UpdateOutputsv>
		delayms(100);
 2d2:	84 e6       	ldi	r24, 0x64	; 100
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	f7 de       	rcall	.-530    	; 0xc6 <_Z7delaymsj>
		GlobalOutputs.lightUp=1;
 2d8:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 2dc:	80 61       	ori	r24, 0x10	; 16
 2de:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		GlobalOutputs.rUp=1;
 2e2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 2e6:	82 60       	ori	r24, 0x02	; 2
 2e8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		GlobalOutputs.rAllow=1;
 2ec:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <GlobalOutputs>
 2f0:	88 60       	ori	r24, 0x08	; 8
 2f2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <GlobalOutputs>
		UpdateOutputs();
 2f6:	a8 de       	rcall	.-688    	; 0x48 <_Z13UpdateOutputsv>
		while (GlobalInputs.PosUp)
 2f8:	75 cf       	rjmp	.-278    	; 0x1e4 <main+0xdc>

000002fa <_exit>:
 2fa:	f8 94       	cli

000002fc <__stop_program>:
 2fc:	ff cf       	rjmp	.-2      	; 0x2fc <__stop_program>
